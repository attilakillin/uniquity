package attilakillin.uniquitybackend.entities;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import java.sql.Timestamp;

/**
 * An entity class representing an API request that this server has received.
 * Each instance contains the who-when-what trio of the request, under the fields
 * host, timestamp, and extension respectively.
 */
@Entity
public class Request {
    /**
     * Autogenerated unique ID. Does not represent a domain field in itself.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The host user of the server instance that executed the request.
     */
    private String host;

    /**
     * The exact moment when the request was received.
     */
    private Timestamp timestamp;

    /**
     * The file extension that the request query contained.
     */
    private String extension;

    /**
     * Create a new request with the specified parameters.
     * @param host The host user of the server instance that executed the request.
     * @param timestamp The exact moment when the request was received.
     * @param extension The file extension that the request query contained.
     */
    public Request(String host, Timestamp timestamp, String extension) {
        this.id = 0L;
        this.host = host;
        this.timestamp = timestamp;
        this.extension = extension;
    }

    /**
     * Empty constructor to be used by JPA.
     * If creating an instance by hand, use the constructor that sets the required fields.
     */
    protected Request() {
    }

    /**
     * Get the host field of the request.
     * @return The host user of the server instance that executed the request.
     */
    public String getHost() {
        return host;
    }

    /**
     * Get the timestamp field of the request.
     * @return The exact moment when the request was received.
     */
    public Timestamp getTimestamp() {
        return timestamp;
    }

    /**
     * Get the extension field of the request.
     * @return The file extension that the request query contained.
     */
    public String getExtension() {
        return extension;
    }
}
